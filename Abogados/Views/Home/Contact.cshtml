@model Lawyers.Contract.Entities.EmailModel
@{
    ViewBag.Title = "Contact";
}

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="http://www.w3schools.com/lib/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css">


<form class="w3-container w3-padding-16 w3-white">
    <h2 class="w3-border-bottom w3-border-light-grey w3-padding-12"><strong>Contacto</strong></h2>
    <p>Contáctenos, respondemos a la brevedad.</p>
    <i class="fa fa-map-marker" style="width:30px"></i> Bv Santa Fe 215. Rafaela, Santa Fe, Argentina<br>
    <i class="fa fa-phone" style="width:30px"></i> Teléfono: (03492)-502672<br>
    <i class="fa fa-envelope" style="width:30px"> </i> Email: contacto@estudioKU.com<br>
</form>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })        
        <form>
            <fieldset>
                <legend></legend>
                <div class="form-group" style="margin-bottom:32px;">
                    @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
                    </div>              
                    <div></div>
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                    </div>
                    <div></div>
                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group" style="margin-top:32px;">
                    @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-14">
                        <strong><input type="submit" value="Enviar" class="w3-btn w3-white w3-border w3-round-large w3-border-green col-lg-offset-8 w3-text-green" /></strong>
                    </div>
                </div>
            </fieldset>
        </form>
    </div>
}
 

<div id="googleMap" class="w3-grayscale" style="width:100%;height:450px;"></div>

<!-- Add Google Maps -->
<script src="https://maps.googleapis.com/maps/api/js"></script>

<script>

    var myCenter = new google.maps.LatLng(-31.2667, -61.4833);

function initialize() {
var mapProp = {
  center: myCenter,
  zoom: 12,
  scrollwheel: false,
  draggable: false,
  mapTypeId: google.maps.MapTypeId.ROADMAP
  };

var map = new google.maps.Map(document.getElementById("googleMap"),mapProp);

var marker = new google.maps.Marker({
  position: myCenter,
});

marker.setMap(map);
}

google.maps.event.addDomListener(window, 'load', initialize);
</script>